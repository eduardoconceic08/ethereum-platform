{"version":3,"sources":["app.jsx","toMarkdown.js"],"names":["getChannelName","channelID","channelName","String","fromCharCode","mod","div","floor","getContentTitle","attributes","title","JSON","parse","e","console","log","replace","length","aggregateSignature","result","signature","contentID","args","toString","undefined","funds","sequence","unshift","newCred","Post","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","body","publisher","timestamp","cred","rank","signed","signing","error","signPost","bind","onCredChange","_this2","web3","toBigNumber","id","credsign","fromBlock","toBlock","get","post","Store","content","credrank","getCredRanksByContents","address","credRanks","window","accountSignatures","account","setState","document","accountID","toNumber","getElementById","innerHTML","marked","target","value","_this3","oldCred","parseInt","pow","times","sign","estimateGas","from","gasEstimate","gas","watcher","Sign","watch","stopWatching","rankCaption","React","createElement","style","backgroundColor","maxWidth","margin","padding","color","paddingBottom","Date","toLocaleString","href","borderBottom","substr","channel","className","display","textAlign","type","name","placeholder","onChange","fontSize","border","outline","paddingRight","onClick","Component","Create","_this4","view","preventHeaderUnbold","action","getAttribute","parentNode","active","getElementsByClassName","i","test","stopPropagation","preventDefault","preventFormatHotkey","ctrlKey","metaKey","keyCode","editPost","previewPost","setChannel","submitPost","MediumEditor","buttonLabels","keyboardCommands","toolbar","buttons","text","hideOnClick","addEventListener","removeEventListener","toMarkdown","_this5","getChannelByName","errors","stringify","version","doc","push","join","nonce","sha3","constructor","random","location","hash","_this6","width","contentEditable","height","opacity","position","zIndex","top","left","cursor","RankedChannels","_this7","loaded","listItems","count","_this8","getNumChannels","numRanks","getChannelsByRanks","tuple","ids","map","ranks","listItem","key","paddingLeft","fontStyle","ChannelPosts","_this9","filter","getPosts","getTopPosts","getNewPosts","onFilterChange","nextProps","loading","menu","_this10","getNumContents","getContentsByRanks","idToIndex","posts","forEach","index","_this11","sequenceNums","Array","_","ChannelSequence","sequenceNum","seqNums","seqNum","reverse","_this12","caption","onMouseLeave","Account","_this13","getAddress","input","_this14","signedContents","signatures","fundedIDs","_this15","Preview","_this16","retries","_this17","setTimeout","componentDidMount","App","_this18","levelOne","levelTwo","levelThree","levelFour","mounted","route","_this19","infura","eth","getAccounts","accounts","_defineProperty","warn","path","split","_this20","fontWeight","alt","src","paddingTop","textDecoration","borderTop","borderRight","borderLeft","placeholderTextColor","bottom","textTransform","node","markdownEscape","repeat","str","childsToMarkdown","tree","mode","res","l","childNodes","nodeToMarkdown","nl","nodeType","nodeValue","tagName","toLowerCase"],"mappings":"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","file":"app.min.js","sourcesContent":["function getChannelName(channelID) {\n  var channelName = '';\n  while (channelID != 0) {\n    channelName = String.fromCharCode(channelID.mod(256)) + channelName;\n    channelID = channelID.div(256).floor();\n  }\n  return channelName;\n}\n\nfunction getContentTitle(attributes) {\n  var title = null;\n  try {\n    title = JSON.parse(attributes).title;\n  }\n  catch (e) {\n    console.log(`Invalid JSON: ${attributes}`);\n  }\n\n  // If the title is empty or just spaces, return empty\n  if (title.replace(/ /g, '').length == 0) {\n    title = null;\n  }\n  return title;\n}\n\nfunction aggregateSignature(result, signature) {\n  var contentID = '0x' + signature.args.contentID.toString(16);\n  if (result.funds[contentID] === undefined) {\n    result.sequence.unshift(contentID);\n  }\n  result.funds[contentID] = signature.args.newCred.toString();\n}\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newCred: '',\n      title: '',\n      body: '',\n      publisher: '0x0',\n      timestamp: '0',\n      cred: 0,\n      rank: 0,\n      funds: 0,\n      signed: false,\n      signing: false,\n      error: ''\n    };\n    this.signPost = this.signPost.bind(this);\n    this.onCredChange = this.onCredChange.bind(this);\n  }\n\n  componentDidMount() {\n    var contentID = web3.toBigNumber(this.props.id);\n    credsign.Post({contentID: contentID}, {fromBlock: 0, toBlock: 'latest'}).get((error, post) => {\n      credsign.Store({contentID: contentID}, {fromBlock: 0, toBlock: 'latest'}).get((error, content) => {\n        credrank.getCredRanksByContents(credsign.address, [this.props.id], (error, credRanks) => {\n          var funds = 0;\n          if (window.accountSignatures !== undefined) {\n            funds = window.accountSignatures[this.props.account].funds[this.props.id] || 0;\n          }\n          this.setState({\n            title: getContentTitle(content[0].args.attributes),\n            body: JSON.parse(content[0].args.document).body,\n            publisher: post[0].args.accountID,\n            timestamp: post[0].args.timestamp,\n            cred: credRanks[0][0].toNumber(),\n            rank: credRanks[1][0].toNumber(),\n            funds: funds\n          });\n        });\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('post-'+this.props.id).innerHTML = marked(this.state.body);\n  }\n\n  onCredChange(e) {\n    this.setState({\n      newCred: e.target.value\n    });\n  }\n\n  signPost() {\n    this.setState({\n      signing: true\n    });\n    var newCred = this.state.newCred;\n    var oldCred = parseInt(this.state.funds);\n    var value = newCred > oldCred ? web3.toBigNumber(10).pow(16).times(newCred - oldCred) : 0;\n    credsign.sign.estimateGas(this.props.id, newCred, credrank.address, {from: this.props.account, value: value}, (error, gasEstimate) => {\n      console.log(gasEstimate);\n      gasEstimate += 100000;\n      credsign.sign(this.props.id, newCred, credrank.address, {from: this.props.account, value: value, gas: gasEstimate}, (error, result) => {\n        if (error) {\n          this.setState({\n            error: error.toString()\n          });\n        }\n        else {\n          var watcher = credsign.Sign({accountID: this.props.account, contentID: this.props.id}, {fromBlock: 'latest'});\n          watcher.watch((error, signature) => {\n            watcher.stopWatching();\n            if (error) {\n              this.setState({\n                error: error.toString()\n              });\n            }\n            else {\n              credrank.getCredRanksByContents(credsign.address, [this.props.id], (error, credRanks) => {\n                this.setState({\n                  signing: false,\n                  cred: credRanks[0][0].toNumber(),\n                  rank: credRanks[1][0].toNumber(),\n                  newCred: '',\n                  signed: true,\n                  funds: signature.args.newCred.toNumber()\n                });\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    var rankCaption = this.state.rank > 0\n      ? `Rank ${this.state.rank} with ${this.state.cred}¢`\n      : `Currently unranked`;\n    return (\n      <div>\n        <div style={{backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '1.5em 1em'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span>{`Posted ${new Date(this.state.timestamp* 1000).toLocaleString()} by `}</span>\n                <a href={`#/account/${this.state.publisher}`} style={{\n                  borderBottom: '2px solid gray',\n                  padding: '.5em 0',\n                  color: 'gray'\n                }}>{`${this.state.publisher.substr(0,5)}...${this.state.publisher.substr(-3)}`}</a>\n                <span>{` in `}</span>\n                <a href={`#/channel/${this.props.channel}`} style={{\n                  color:'gray',\n                  borderBottom: '2px solid gray',\n                  paddingBottom: '.5em'}}>{\n                  `#${this.props.channel}`\n                }</a>\n              </div>\n              <h1>{this.state.title}</h1>\n              <div id={'post-'+this.props.id}></div>\n            </div>\n          </div>\n        </div>\n        <div style={{maxWidth: '600px', margin: '0 auto'}}>\n          <div className='flex' style={{padding: '1.5em 1em'}}>\n            <div className='flex-grow' style={{display: 'block', textAlign: 'left'}}>\n              <div>\n                <span>{rankCaption}</span>\n              </div>\n            </div>\n            <div className='flex-grow' style={{\n              textAlign: 'right',\n              display: (this.props.account == '') ? 'none' : 'block'\n            }}>\n              <div style={{display: !this.state.signing ? 'block' : 'none'}}>\n                <input type='text' name='cred' placeholder={this.state.funds} value={this.state.newCred} onChange={this.onCredChange} style={{\n                  textAlign: 'right',\n                  fontSize: '1em',\n                  border: '0',\n                  backgroundColor: 'transparent',\n                  outline: 'none'\n                }} />\n                <span style={{paddingRight: '.5em'}}>¢</span>\n                <a onClick={this.signPost} style={{\n                  color: 'black',\n                  display: 'inline-block',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }}>Sign</a>\n              </div>\n              <div style={{display: this.state.signing ? 'block' : 'none'}}>\n                <span>Signing, please wait...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'edit',\n      channel: '',\n      error: ''\n    };\n\n    this.preventHeaderUnbold = (e) => {\n      var action = e.target.getAttribute('data-action') || e.target.parentNode.getAttribute('data-action');\n      if (action == 'bold') {\n        var active = document.getElementsByClassName('medium-editor-button-active');\n        for (var i = 0; i < active.length; i++) {\n          if (/h+/.test(active[i].getAttribute('data-action', ''))) {\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n        }\n      }\n    };\n\n    this.preventFormatHotkey = (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch(e.keyCode){\n          case 66: //ctrl+B or ctrl+b\n          case 98:\n          case 73: //ctrl+I or ctrl+i\n          case 105:\n          case 85: //ctrl+U or ctrl+u\n          case 117:\n            e.stopPropagation();\n            e.preventDefault();\n            return false;\n        }\n      }\n    };\n\n    this.editPost = this.editPost.bind(this);\n    this.previewPost = this.previewPost.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n    this.submitPost = this.submitPost.bind(this);\n  }\n\n  componentDidMount() {\n    var editor = new MediumEditor('#new-post-body', {\n      buttonLabels: 'fontawesome',\n      keyboardCommands: false,\n      toolbar: {\n        buttons: ['bold', 'italic', 'h2', 'h3', 'image', 'anchor', 'pre', 'quote'],\n      },\n      placeholder: {\n        text: 'body',\n        hideOnClick: true\n      }\n    });\n    // Prevent the user from 'unbolding' text marked with h1, h2, hX...\n    document.addEventListener('click', this.preventHeaderUnbold, true);\n\n    // Prevent Bold/Italics/Underline via shortcuts\n    document.addEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.preventHeaderUnbold);\n    document.removeEventListener('keydown', this.preventFormatHotkey);\n  }\n\n  editPost() {\n    this.setState({\n      view: 'edit',\n      error: ''\n    });\n  }\n\n  previewPost() {\n    this.setState({\n      view: 'preview',\n      error: ''\n    });\n    document.getElementById('new-post-title-preview').innerHTML = document.getElementById('new-post-title').value;\n    document.getElementById('new-post-body-preview').innerHTML = marked(toMarkdown(document.getElementById('new-post-body')));\n  }\n\n  setChannel(e) {\n    this.setState({\n      channel: e.target.innerHTML\n    });\n  }\n\n  submitPost() {\n    this.setState({\n      view: 'submit'\n    });\n    credsign.getChannelByName(this.props.channel, (error, channelID) => {\n      var errors = [];\n      var title = document.getElementById('new-post-title').value;\n      var body = toMarkdown(document.getElementById('new-post-body'));\n\n      var attributes = JSON.stringify({\n        version: '1.0',\n        title: title\n      });\n      var doc = JSON.stringify({\n        version: '1.0',\n        body: body\n      });\n\n      if (channelID == 0) {\n        errors.push('Channel must be between 3 and 30 characters and consist of only letters numbers and underscores');\n      }\n      if (title.length < 10 || title > 100) {\n        errors.push('Title must be between 10 and 100 characters');\n      }\n      this.setState({\n        error: errors.join('. ')\n      });\n\n      if (errors.length == 0) {\n        var nonce = web3.sha3(web3.toBigNumber(0).constructor.random().toString());\n        this.setState({\n          nonce: nonce\n        })\n        credsign.post.estimateGas(this.props.channel, attributes, doc, nonce, 0, credrank.address, {from: this.props.account, value: 0}, (error, gasEstimate) => {\n          console.log(gasEstimate);\n          gasEstimate += 100000;\n          credsign.post(this.props.channel, attributes, doc, nonce, 0, credrank.address, {from: this.props.account, value: 0, gas: gasEstimate}, (error) => {\n            if (error) {\n              this.setState({\n                error: error.toString()\n              });\n            }\n            else {\n              var watcher = credsign.Store({accountID: this.props.account, nonce: this.state.nonce}, {fromBlock: 'latest'});\n              watcher.watch((error, post) => {\n                watcher.stopWatching();\n                if (error) {\n                  this.setState({\n                    error: error.toString()\n                  });\n                }\n                else {\n                  window.location.hash = `#/channel/${this.props.channel}/post/0x${post.args.contentID.toString(16)}`;\n                }\n              });\n            }\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div style={{width: '100%', margin: '0 auto'}}>\n        <div style={{width: '100%', backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '2em 1em'}}>\n              <div style={{display: this.state.view == 'edit' ? 'block' : 'none'}}>\n                <textarea id='new-post-title' type='text' placeholder='title'></textarea>\n                <div id='new-post-body' contentEditable='true'></div>\n              </div>\n              <div style={{display: this.state.view != 'edit' ? 'block' : 'none'}}>\n                <h1 id='new-post-title-preview'></h1>\n                <div id='new-post-body-preview'></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div style={{width: '100%'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div className='flex' style={{padding: '1.5em 1em'}}>\n              <div className='flex-grow' style={{textAlign: 'left'}}>\n                <a style={{\n                  color: 'black',\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} href={'#/channel/'+this.props.channel}>Cancel</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.editPost}>Edit</a>\n              </div>\n              <div className='flex-grow' style={{textAlign: 'right'}}>\n                <a style={{\n                  display: this.state.view == 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.previewPost}>Preview</a>\n                <a style={{\n                  display: this.state.view != 'edit' ? 'inline-block' : 'none',\n                  borderBottom: '2px solid black',\n                  paddingBottom: '.5em'\n                }} onClick={this.submitPost}>Publish</a>\n              </div>\n              <div className='backdrop' style={{\n                width: '100%',\n                height: '100%',\n                opacity: 0.5,\n                backgroundColor: 'black',\n                position: 'fixed',\n                zIndex: 1,\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                top: '0',\n                left: '0'\n              }}>{' '}</div>\n              <div style={{\n                display: this.state.view == 'submit' ? 'block' : 'none',\n                top: '25%',\n                left: '0',\n                width: '100%',\n                position: 'fixed',\n                backgroundColor: 'transparent',\n                zIndex: 2\n              }}>\n                <div style={{maxWidth: '600px', margin: '0 auto', backgroundColor: '#FCFCFC', border: '1px solid #DDD'}}>\n                  <div style={{padding: '1em', display: this.state.error.length > 0 ? 'block' : 'none'}}>\n                    <h1>Unable to publish</h1>\n                    <div style={{padding: '1em 0'}}>{this.state.error}</div>\n                    <span onClick={() => this.setState({view: 'edit', error: ''})} style={{\n                      borderBottom: '2px solid black',\n                      padding: '.5em 0',\n                      display: 'inline-block',\n                      cursor: 'pointer'\n                    }}>Close</span>\n                  </div>\n                  <div style={{padding: '1em', display: this.state.error.length == 0 ? 'block' : 'none'}}>\n                    <h1>Publishing...</h1>\n                    <div style={{padding: '1em 0'}}>{\n                      'Your post is being published. This page will redirect to your post once published. '+\n                      'If you are not redirected after several minutes, try closing this message and publishing again.'\n                    }</div>\n                    <span onClick={() => this.setState({view: 'publish', error: ''})} style={{\n                      borderBottom: '2px solid black',\n                      padding: '.5em 0',\n                      display: 'inline-block',\n                      cursor: 'pointer'\n                    }}>Close</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RankedChannels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      listItems: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    credrank.getNumChannels(credsign.address, (error, numRanks) => {\n      if (numRanks == 0) {\n        this.setState({\n          loaded: true,\n          listItems: [],\n          count: 0\n        });\n        return;\n      }\n      credrank.getChannelsByRanks(credsign.address, 1, numRanks, (error, tuple) => {\n        var ids = tuple[0];\n        var cred = tuple[1].map((cred) => cred.toNumber());\n        var ranks = tuple[2].map((rank) => rank.toNumber());\n\n        var listItems = [];\n        for (var i = 0; i < ids.length; i++) {\n          listItems.push({\n            id: '0x' + ids[i].toString(16),\n            channelName: getChannelName(ids[i]),\n            rank: ranks[i].toString(),\n            cred: cred[i].toString()\n          });\n        }\n        this.setState({\n          loaded: true,\n          listItems: listItems,\n          count: numRanks\n        });\n      });\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      return (\n        <li key={'li-'+listItem.id}>\n          <a href={`#/channel/${listItem.channelName}`}>\n            <div>{'#' + listItem.channelName}</div>\n            <span>{'Rank '+listItem.rank + ' with '+listItem.cred + '¢ signed'}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div>\n          <span>{'Top channels'}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n          </div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>Nothing to see here</span>\n      </div>\n    );\n  }\n}\n\nclass ChannelPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channelID: -1,\n      listItems: [],\n      filter: 'Top',\n      count: 0\n    };\n    this.getPosts = this.getPosts.bind(this);\n    this.getTopPosts = this.getTopPosts.bind(this);\n    this.getNewPosts = this.getNewPosts.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPosts(this.state.filter, this.props.channel);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.channel != this.props.channel) {\n      this.getPosts(this.state.filter, nextProps.channel);\n    }\n  }\n\n  onFilterChange(e) {\n    this.getPosts(e.target.innerHTML, this.props.channel);\n  }\n\n  getPosts(filter, channel) {\n    this.setState({\n      loading: true,\n      filter: filter,\n      menu: false\n    });\n    if (filter == 'Top') {\n      this.getTopPosts(channel);\n    }\n    else if (filter == 'New') {\n      this.getNewPosts(channel);\n    }\n  }\n\n  getTopPosts(channel) {\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credrank.getNumContents(credsign.address, channelID, (error, numRanks) => {\n        if (numRanks == 0 || channelID == 0) {\n          this.setState({\n            loading: false,\n            listItems: [],\n            channelID: channelID,\n            count: 0\n          });\n          return;\n        }\n        else {\n          this.setState({\n            channelID: channelID,\n            channelName: getChannelName(channelID)\n          });\n        }\n        credrank.getContentsByRanks(credsign.address, channelID, 1, numRanks, (error, tuple) => {\n          var listItems = [];\n          var idToIndex = {};\n          for (var i = 0; i < tuple[0].length; i++) {\n            var id = '0x' + tuple[0][i].toString(16);\n            idToIndex[id] = i;\n            listItems.push({\n              id: id,\n              cred: tuple[1][i].toNumber(),\n              rank: tuple[2][i].toNumber()\n            });\n          }\n          credsign.Post({contentID: tuple[0]}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n            posts.forEach((post) => {\n              var index = idToIndex['0x' + post.args.contentID.toString(16)];\n              listItems[index].title = getContentTitle(post.args.attributes);\n              listItems[index].timestamp = post.args.timestamp;\n            });\n            this.setState({\n              listItems: listItems,\n              count: numRanks,\n              loading: false\n            });\n          });\n        });\n      });\n    });\n  }\n\n  getNewPosts(channel) {\n    this.setState({\n      loading: true\n    });\n    credsign.getChannelByName(channel, (error, channelID) => {\n      credsign.getNumContents(channelID, (error, numRanks) => {\n        numRanks = numRanks.toNumber();\n        if (numRanks == 0) {\n          this.setState({\n            loading: false,\n            listItems: [],\n            count: 0\n          });\n          return;\n        }\n        else {\n          this.setState({\n            channelID: channelID,\n            channelName: getChannelName(channelID)\n          });\n        }\n        var sequenceNums = Array.from(Array(2)).map((_, i) => i + 1);\n        credsign.ChannelSequence({channelID: channelID, sequenceNum: sequenceNums}, {fromBlock: 0, toBlock: 'latest'}).get((error, seqNums) => {\n          var ids = seqNums.map((seqNum) => seqNum.args.contentID);\n          var listItems = [];\n          credsign.Post({contentID: ids}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n            for (var i = 0; i < posts.length; i++) {\n              listItems.push({\n                id: '0x' + ids[i].toString(16),\n                title: getContentTitle(posts[i].args.attributes),\n                timestamp: posts[i].args.timestamp\n              });\n            };\n            credrank.getCredRanksByContents(credsign.address, ids, (error, credRanks) => {\n              for (var i = 0; i < posts.length; i++) {\n                listItems[i].cred = credRanks[0][i].toNumber();\n                listItems[i].rank = credRanks[1][i].toNumber();\n              }\n              this.setState({\n                loading: false,\n                listItems: listItems.reverse(),\n                count: numRanks\n              });\n            });\n          });\n        });\n      })\n    });\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var caption = '';\n      if (listItem.rank > 0) {\n        caption = `Rank ${listItem.rank} with ${listItem.cred}¢`;\n        if (listItem.signed) {\n          if (listItem.funds > 0) {\n            caption += ` - Signed with ${listItem.funds}¢`;\n          }\n          else {\n            caption += ` - Signed`;\n          }\n        }\n      }\n      else {\n        caption = `Unranked in #${this.state.channelName}`;\n      }\n      return (\n        <li key={'li-'+listItem.id}>\n          <a href={`#/channel/${this.props.channel}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{caption}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative', display: this.state.channelID > 0 ? 'block' : 'none'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li onClick={this.onFilterChange}>Top</li>\n            <li onClick={this.onFilterChange}>New</li>\n          </ul>\n          <span>{` posts in #${this.props.channel}`}</span>\n          <span>{' (' + this.state.count + ')'}</span>\n        </div>\n        <div style={{display: this.state.channelID == 0 ? 'block' : 'none'}}>Invalid channel</div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>{\n          this.state.channelID != 0\n            ? (this.state.loading ? 'Loading...' : 'Nothing to see here')\n            : 'Channels must be between 3 and 30 characters consisting of letters, numbers, and underscores.'\n        }</span>\n      </div>\n    );\n  }\n}\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: this.props.filter || 'Posted',\n      listItems: [],\n      count: 0\n    };\n\n    this.getPosts = this.getPosts.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  getAddress(input) {\n    if (parseInt(input) > 0)\n      return input;\n    else\n      return '-1';\n  }\n\n  componentDidMount() {\n    var account = this.getAddress(this.props.account);\n    this.getPosts(this.state.filter, account);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var account = this.getAddress(nextProps.account);\n    if (account != this.props.account) {\n      this.getPosts(this.state.filter, account);\n    }\n  }\n\n  getPosts(filter, account) {\n    this.setState({\n      loading: true,\n      menu: false,\n      filter: filter\n    });\n    var listItems = [];\n    var signedContents = {\n      sequence: [],\n      funds: {}\n    };\n    if (filter == 'Posted') {\n      credsign.Post({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n        var ids = [];\n        posts.forEach((post) => {\n          ids.push(post.args.contentID);\n          listItems.push({\n            id: '0x' + post.args.contentID.toString(16),\n            title: getContentTitle(post.args.attributes),\n            channelName: getChannelName(post.args.channelID),\n            timestamp: post.args.timestamp\n          });\n        });\n        credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n          signatures.forEach((signature) => {\n            aggregateSignature(signedContents, signature);\n          });\n          credrank.getCredRanksByContents(credsign.address, ids, (error, credRanks) => {\n            listItems.forEach((listItem, i) => {\n              listItem.cred = credRanks[0][i].toNumber();\n              listItem.rank = credRanks[1][i].toNumber();\n              listItem.signed = signedContents.funds[listItem.id] !== undefined;\n              listItem.funds = signedContents.funds[listItem.id] || 0;\n            })\n            this.setState({\n              loading: false,\n              listItems: listItems.reverse()\n            });\n          });\n        });\n      });\n    }\n    else if (filter == 'Funded') {\n      credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n        signatures.forEach((signature) => {\n          aggregateSignature(signedContents, signature);\n        });\n        var fundedIDs = signedContents.sequence.filter((contentID) => signedContents.funds[contentID] > 0);\n        credsign.Post({contentID: fundedIDs}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          var idToIndex = {};\n          posts.forEach((post, i) => idToIndex['0x' + post.args.contentID.toString(16)] = i);\n          credrank.getCredRanksByContents(credsign.address, fundedIDs, (error, credRanks) => {\n            fundedIDs.forEach((contentID, i) => {\n              var post = posts[idToIndex[contentID]];\n              listItems.push({\n                id: contentID,\n                title: getContentTitle(post.args.attributes),\n                channelName: getChannelName(post.args.channelID),\n                timestamp: post.args.timestamp,\n                cred: credRanks[0][i].toNumber(),\n                rank: credRanks[1][i].toNumber(),\n                signed: true,\n                funds: signedContents.funds[contentID]\n              });\n            });\n            this.setState({\n              loading: false,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n    else if (filter == 'Signed') {\n      credsign.Sign({accountID: account}, {fromBlock: 0, toBlock: 'latest'}).get((error, signatures) => {\n        signatures.forEach((signature) => {\n          aggregateSignature(signedContents, signature);\n        });\n        credsign.Post({contentID: signedContents.sequence}, {fromBlock: 0, toBlock: 'latest'}).get((error, posts) => {\n          var idToIndex = {};\n          posts.forEach((post, i) => idToIndex['0x' + post.args.contentID.toString(16)] = i);\n          credrank.getCredRanksByContents(credsign.address, signedContents.sequence, (error, credRanks) => {\n            signedContents.sequence.forEach((contentID, i) => {\n              var post = posts[idToIndex[contentID]];\n              listItems.push({\n                id: contentID,\n                title: getContentTitle(post.args.attributes),\n                channelName: getChannelName(post.args.channelID),\n                timestamp: post.args.timestamp,\n                cred: credRanks[0][i].toNumber(),\n                rank: credRanks[1][i].toNumber(),\n                signed: true,\n                funds: signedContents.funds[contentID]\n              });\n            });\n            this.setState({\n              loading: false,\n              listItems: listItems\n            });\n          });\n        });\n      });\n    }\n  }\n\n  onFilterChange(e) {\n    var filter = e.target.innerHTML;\n    var account = this.getAddress(this.props.account);\n    this.getPosts(filter, account);\n  }\n\n  render() {\n    var listItems = this.state.listItems.map((listItem) => {\n      var caption = '';\n      if (listItem.rank > 0) {\n        caption = `Rank ${listItem.rank} in #${listItem.channelName} with ${listItem.cred}¢`;\n        if (listItem.signed) {\n          if (listItem.funds > 0) {\n            caption += ` - Signed with ${listItem.funds}¢`;\n          }\n          else {\n            caption += ` - Signed`;\n          }\n        }\n      }\n      else {\n        caption = `Unranked in #${listItem.channelName}`;\n      }\n      return (\n        <li key={'li-'+listItem.id}>\n          <a href={`#/channel/${listItem.channelName}/post/${listItem.id}`}>\n            <div>{listItem.title}</div>\n            <span>{caption}</span>\n          </a>\n        </li>\n      );\n    });\n    return (\n      <div className='view-align'>\n        <div style={{position: 'relative'}}>\n          <span onClick={() => this.setState({menu: !this.state.menu})} style={{cursor: 'pointer'}}>{`${this.state.filter} ▾`}</span>\n          <ul onMouseLeave={() => this.setState({menu: false})} onClick={this.onFilterChange} style={{position: 'absolute', top: '1.5em', left: '0', display: this.state.menu ? 'block' : 'none'}}>\n            <li>Posted</li>\n            <li>Funded</li>\n            <li>Signed</li>\n          </ul>\n          <span>{` by account (${listItems.length})`}</span>\n        </div>\n        <ol>{listItems}</ol>\n        <span style={{paddingLeft: '1em', display: listItems.length == 0 ? 'block' : 'none', fontStyle: 'italic'}}>{\n          this.state.loading ? 'Loading...' : 'Nothing to see here'\n        }</span>\n      </div>\n    );\n  }\n}\n\nclass Preview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      publisher: '0x0',\n      loading: true,\n      retries: 10\n    };\n  }\n\n  componentDidMount() {\n    var contentID = web3.toBigNumber(this.props.id);\n    credsign.Store({contentID: contentID}, {fromBlock: 0, toBlock: 'latest'}).get((error, content) => {\n      // FIXME - hack to keep trying since infura may be unresponsive\n      if (error || content.length == 0) {\n        if (error) {\n          console.log(error.toString());\n        }\n        if (this.state.retries > 0) {\n          this.setState({\n            retries: this.state.retries - 1\n          });\n          setTimeout(() => {this.componentDidMount()}, 500);\n        }\n      }\n      else {\n        this.setState({\n          title: getContentTitle(content[0].args.attributes),\n          body: JSON.parse(content[0].args.document).body,\n          publisher: content[0].args.accountID,\n          channelName: getChannelName(content[0].args.channelID),\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    document.getElementById('post-'+this.props.id).innerHTML = marked(this.state.body);\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{backgroundColor: '#FFF'}}>\n          <div style={{maxWidth: '600px', margin: '0 auto'}}>\n            <div style={{padding: '1.5em 1em', display: this.state.loading ? 'none' : 'block'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span>{`Posted in #${this.state.channelName}`}</span>\n              </div>\n              <h1>{this.state.title}</h1>\n              <div id={'post-'+this.props.id}></div>\n            </div>\n            <div style={{padding: '1.5em 1em', display: this.state.loading ? 'block' : 'none'}}>\n              <div style={{color: 'gray', paddingBottom: '1em'}}>\n                <span style={{display: this.state.retries == 0 ? 'block' : 'none'}}>Unable to fetch content</span>\n                <span style={{display: this.state.retries != 0 ? 'block' : 'none'}}>Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Manage navigation\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      levelOne: '',\n      levelTwo: '',\n      levelThree: '',\n      levelFour: '',\n      account: '',\n      mounted: false,\n      contentID: null\n    };\n\n\n    this.route = this.route.bind(this);\n    this.setChannel = this.setChannel.bind(this);\n\n    window.addEventListener('hashchange', () => this.route(window.location.hash));\n  }\n\n  componentDidMount() {\n    this.route(window.location.hash);\n    if (!window.infura) {\n      web3.eth.getAccounts((error, accounts) => {\n        if (accounts.length > 0) {\n          var address = accounts[0];\n          window.accountSignatures = {\n            [address]: {\n              sequence: [],\n              funds: {}\n            }\n          };\n          var watcher = credsign.Sign({accountID: address}, {fromBlock: 0, toBlock: 'latest'});\n          watcher.get((error, signatures) => {\n            watcher.watch((error, signature) => {\n              aggregateSignature(accountSignatures[address], signature);\n            });\n            signatures.forEach((signature) => {\n              aggregateSignature(accountSignatures[address], signature);\n            });\n          });\n          this.setState({\n            account: address\n          });\n        }\n        else {\n          this.setState({\n            warn: true\n          });\n        }\n      });\n    }\n  }\n\n  setChannel(e) {\n    window.location.hash = `#/${this.state.levelOne}/${e.target.value}`;\n    this.route(window.location.hash);\n  }\n\n  componentDidUpdate() {\n    document.getElementById('channel').innerHTML = this.state.levelTwo;\n  }\n\n  route(href) {\n    var path = href.split('/');\n    path[1] = path.length > 1 ? path[1] : 'channel';\n    path[2] = path.length > 2 ? path[2] : '';\n    path[3] = path.length > 3 ? path[3] : '';\n    path[4] = path.length > 4 ? path[4] : '';\n    this.setState({\n      levelOne: path[1],\n      levelTwo: path[2],\n      levelThree: path[3],\n      levelFour: path[4],\n      mounted: true\n    });\n  }\n\n  render() {\n\n    var view = '';\n    if (this.state.mounted) {\n      if (window.infura) {\n        if (this.state.levelOne == 'channel' && this.state.levelThree == 'post') {\n          view = <Preview id={this.state.levelFour} channel={this.state.levelTwo} />;\n        }\n        else{\n          window.location.replace('/?err=url');\n        }\n      }\n      else if (this.state.levelOne == 'channel') {\n        if (this.state.levelThree == 'post') {\n          view = <Post id={this.state.levelFour} channel={this.state.levelTwo} account={this.state.account} />;\n        }\n        else if (this.state.levelTwo == '') {\n          view = <RankedChannels />;\n        }\n        else {\n          view = <ChannelPosts channel={this.state.levelTwo} account={this.state.account} />;\n        }\n      }\n      else if (this.state.levelOne == 'publish'){\n        view = <Create channel={this.state.levelTwo} account={this.state.account} />\n      }\n      else if (this.state.levelOne == 'account') {\n        view = <Account account={this.state.levelTwo} />;\n      }\n    }\n\n    return (\n      <div style={{padding: '3em 0'}}>\n        <div style={{\n          position: 'fixed',\n          width: '100%',\n          backgroundColor: '#fafafa',\n          borderBottom: '1px solid #DDD',\n          color: 'black',\n          fontSize: '1.5em',\n          top: 0,\n          fontWeight: 'bold',\n          padding: '.5em 0',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <div style={{\n            maxWidth: '600px',\n            margin: '0 auto',\n            display: window.infura ? 'none' : 'block'\n          }}>\n            <div className='flex' style={{padding: '0 .66em'}}>\n              <a href='#/channel' className='flex-grow' style={{\n                color: 'black',\n                textAlign: 'left',\n                display: 'inline-block'\n              }}>Channels</a>\n              <a href='/terminal' alt='¢'><img src='logo.svg' style={{width: '1em', height: '1em', paddingTop: '2px'}} /></a>\n              <a href={`#/account/${this.state.account}`} className='flex-grow' style={{\n                color: 'black',\n                textAlign: 'right',\n                display: 'inline-block'\n              }}>Accounts</a>\n            </div>\n          </div>\n          <div style={{\n            maxWidth: '600px',\n            margin: '0 auto',\n            display: window.infura ? 'block' : 'none'\n          }}>\n            <a href='/' style={{\n              padding: '0 .66em',\n              display: 'inline-block',\n              color: 'black',\n              textDecoration: 'none'\n            }}>{\n              '¢'\n            }</a></div>\n        </div>\n        <div style={{maxWidth: '600px', margin: '0 auto', display: window.infura ? 'none' : 'block', padding: '1.5em 0'}}>\n          <div className='flex'>\n            <div className='flex-grow'>\n              <div className='flex' style={{\n                padding: '0 1em',\n                backgroundColor: 'white',\n                borderTop: '2px solid white',\n                borderBottom: '2px solid white',\n                borderRight: '0',\n                borderLeft: '0'\n              }}>\n                <span className='flex-shrink' style={{\n                  color: 'gray',\n                  padding: '.5em 0',\n                  fontWeight: 'normal'\n                }}>{this.state.levelOne == 'account' ? '@' : '#'}</span>\n                <input type='text' placeholder={this.state.levelOne == 'account' ? '0x321...' : 'channel'} id='channel' className='flex-grow' style={{\n                  backgroundColor: 'transparent',\n                  fontSize: '1em',\n                  padding: '.5em 0',\n                  margin: 0,\n                  border: 0,\n                  outline: 0,\n                  placeholderTextColor: 'gray',\n                  color: 'black'\n                }} value={this.state.levelTwo} onChange={this.setChannel}></input>\n              </div>\n            </div>\n            <div className='flex-shrink'>\n              <a style={{\n                margin: '0 1em',\n                color: 'black',\n                display: (this.state.levelOne == 'publish' || this.state.account == '') ? 'none' : 'block',\n                borderBottom: '2px solid black',\n                padding: '.5em 0'\n              }} href={`#/publish/${this.state.levelOne == 'channel' ? this.state.levelTwo : ''}`}>Publish</a>\n            </div>\n          </div>\n        </div>\n        <div style={{display: this.state.warn ? 'block': 'none'}}>\n          <div className='backdrop' style={{\n            width: '100%',\n            height: '100%',\n            opacity: 0.5,\n            backgroundColor: 'black',\n            position: 'fixed',\n            zIndex: 1,\n            top: '0',\n            left: '0'\n          }}>{' '}</div>\n          <div style={{\n            top: '25%',\n            left: '0',\n            margin: '0 auto',\n            width: '100%',\n            zIndex: 2,\n            position: 'fixed',\n            backgroundColor: 'transparent'\n          }}>\n            <div style={{maxWidth: '600px', margin: '0 auto', backgroundColor: '#FCFCFC', border: '1px solid #DDD'}}>\n              <div style={{padding: '1em'}}>\n                <h1>Please link an account</h1>\n                <div style={{padding: '1em 0'}}>{\n                  'CredSign was unable to detect your Ethereum account. '+\n                  'If you do not have an account, please install Mist or '+\n                  'MetaMask and create one. You will need an account to '+\n                  'publish and sign content.'\n                }</div>\n                <span onClick={() => this.setState({warn: false})} style={{\n                  borderBottom: '2px solid black',\n                  padding: '.5em 0',\n                  display: 'inline-block',\n                  cursor: 'pointer'\n                }}>Close</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>{view}</div>\n        <div style={{\n          width: '100%',\n          position: 'fixed',\n          backgroundColor: '#fafafa',\n          borderTop: '1px solid #DDD',\n          color: 'gray',\n          bottom: 0,\n          fontSize: '69%',\n          fontWeight: 'bold',\n          padding: '1em 0',\n          textTransform: 'uppercase',\n          textAlign: 'center',\n          zIndex: 10\n        }}>\n          <span className='collapsable'>{'Message us on '}</span>\n          <a href={'https://facebook.com/CredSign'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Facebook</a>\n          <span>{' · '}</span>\n          <span className='collapsable'>{'View source on '}</span>\n          <a href={'https://github.com/CredSign/credsign.github.io'} style={{\n            padding: '.5em 0',\n            borderBottom: '2px solid gray',\n            display: 'inline-block',\n            color: 'gray'\n          }}>Github</a>\n          <span>{' · '}</span>\n          <span className='collapsable'>{'Usage governed by '}</span>\n          <a\n            href='https://github.com/CredSign/credsign.github.io/blob/master/LICENSE'\n            style={{\n              color: 'gray',\n              padding: '.5em 0',\n              display: 'inline-block',\n              borderBottom: '2px solid gray'\n            }}>terms</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nwindow.App = App;\n","// Adapted from https://gist.github.com/Youwotma/1762527\n// No license provided in original, so assume license of this repo.\n\nwindow.toMarkdown = (node) => {\n\n    var markdownEscape = (text) => {\n        return text ? text.replace(/\\s+/g, \" \").replace(/[\\\\\\-*_>#]/g, \"\\\\$&\") : '';\n    }\n\n    var repeat = (str, times) => {\n        return (new Array(times+1)).join(str);\n    }\n\n    var childsToMarkdown = (tree, mode) => {\n        var res = \"\";\n        for (var i = 0, l = tree.childNodes.length; i < l; i++) {\n            res += nodeToMarkdown(tree.childNodes[i], mode);\n        }\n        return res;\n    }\n\n    var nodeToMarkdown = (tree, mode) => {\n        var nl = \"\\n\\n\";\n        if (tree.nodeType == 3) { // Text node\n            return markdownEscape(tree.nodeValue);\n        }\n        else if (tree.nodeType == 1) {\n            if (mode == \"block\") {\n                switch (tree.tagName.toLowerCase()) {\n                    case \"br\":\n                        return nl;\n                    case \"hr\":\n                        return nl + \"---\" + nl;\n                    // Block container elements\n                    case \"p\":\n                    case \"div\":\n                    case \"section\":\n                    case \"address\":\n                    case \"center\":\n                        return nl + childsToMarkdown(tree, \"block\") + nl;\n                    case \"ul\":\n                        return nl + childsToMarkdown(tree, \"u\") + nl;\n                    case \"ol\":\n                        return nl + childsToMarkdown(tree, \"o\") + nl;\n                    case \"pre\":\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"code\":\n                        if (tree.childNodes.length == 1) {\n                            break; // use the inline format\n                        }\n                        return nl + \"    \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"h1\":\n                    case \"h2\":\n                    case \"h3\":\n                    case \"h4\":\n                    case \"h5\":\n                    case \"h6\":\n                        return nl + repeat(\"#\", +tree.tagName[1]) + \"  \" + childsToMarkdown(tree, \"inline\") + nl;\n                    case \"blockquote\":\n                        return nl + \"> \" + childsToMarkdown(tree, \"inline\") + nl;\n                }\n            }\n            if (/^[ou]+$/.test(mode)) {\n                if (tree.tagName == \"LI\") {\n                    return \"\\n\" + repeat(\"  \", mode.length - 1) + (mode[mode.length-1]==\"o\"?\"1. \":\"- \") + childsToMarkdown(tree, mode+\"l\");\n                }\n                else{\n                    console.log(\"[toMarkdown] - invalid element at this point \" + mode.tagName);\n                    return childsToMarkdown(tree, \"inline\");\n                }\n            }\n            else if (/^[ou]+l$/.test(mode)) {\n                if (tree.tagName == \"UL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"u\");\n                }\n                else if (tree.tagName == \"OL\") {\n                    return childsToMarkdown(tree,mode.substr(0,mode.length-1)+\"o\");\n                }\n            }\n\n            // Inline tags\n            switch (tree.tagName.toLowerCase()) {\n                case \"strong\":\n                case \"b\":\n                    return \"**\" + childsToMarkdown(tree,\"inline\") + \"**\";\n                case \"em\":\n                case \"i\":\n                    return \"_\" + childsToMarkdown(tree,\"inline\") + \"_\";\n                case \"code\": // Inline version of code\n                    return \"`\" + childsToMarkdown(tree,\"inline\") + \"`\";\n                case \"a\":\n                    return \"[\" + childsToMarkdown(tree,\"inline\") + \"](\" + tree.getAttribute(\"href\") + \")\";\n                case \"img\":\n                    return nl + \"![: \" + markdownEscape(tree.getAttribute(\"alt\")) + \"](\" + tree.getAttribute(\"src\") + \")\" + nl;\n                case \"script\":\n                case \"style\":\n                case \"meta\":\n                    return \"\";\n                default:\n                    console.log(\"[toMarkdown] - undefined element \" + tree.tagName);\n                    return childsToMarkdown(tree,mode);\n            }\n        }\n    }\n\n    return nodeToMarkdown(node, \"block\").replace(/[\\n]{2,}/g,\"\\n\\n\").replace(/^[\\n]+/,\"\").replace(/[\\n]+$/,\"\");\n}\n"],"sourceRoot":"/source/"}